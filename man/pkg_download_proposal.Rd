% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkg-downloads.R
\name{pkg_download_proposal}
\alias{pkg_download_proposal}
\title{A package download proposal}
\description{
Typical workflow to download a set of packages:\preformatted{pkgdl <- new_pkg_download_proposal(refs)
pkgdl$resolve()
pkgdl$download()
pkgdl$get_downloads()
}
}
\section{Usage}{
\preformatted{dl <- new_pkg_download_proposal(refs)
dl <- pkg_download_proposal$new(refs, config = list(), remote_types = NULL)

dl$get_refs()
dl$get_config()

dl$resolve()
dl$async_resolve()
dl$get_resolution()

dl$download()
dl$async_download()
dl$get_downloads()
}
}

\section{Arguments}{

\itemize{
\item \code{refs}: Package names or references. See \link{pkg_refs} for the syntax.
\item \code{config}: Configuration options, a named list. See \link{pkg_config}.
\item \code{remotes_types}: Custom remote ref types, this is for advanced use,
and experimental currently.
}
}

\section{Details}{


\code{\link[=new_pkg_download_proposal]{new_pkg_download_proposal()}} and \verb{$new()} create a new package download
proposal. The latter has more options, and it is for expert use.

\verb{$get_refs()} returns the refs of a download proposal, see \link{pkg_refs}.

\verb{$get_config()} returns the configuration, see \link{pkg_config}.

\verb{$resolve()} resolves all dependencies of the remote references of the
download proposal. This usually involves downloading metadata from CRAN
and Bioconductor (unless already cached), and also from Github, if GitHub
refs are specified, either directly or indirectly. See \link{pkg_resolution}.

\verb{$async_resolve()} is the asynchronous version of \verb{$resolve()}, it
uses deferred values, and it is currently for advanced use.

\verb{$get_resolution()} returns the result of the resolution, in a
\code{pkg_resolution_result} object, which is also a tibble. See
\link{pkg_resolution_result} for the format.

\verb{$download()} downloads all resolved packages. It uses
the package cache in the pkgcache package by default, to avoid downloads
if possible.

\verb{$async_download()} downloads all resolved packages,
asynchronously. It returns a deferred value, and it is currently for
advanced use.

\verb{$get_downloads()} returns data about the downloaded packages.
See the format at \link{pkg_download_result}.
}

